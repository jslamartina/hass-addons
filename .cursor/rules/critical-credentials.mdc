---
alwaysApply: true
description: Critical credential and configuration handling
---

# Critical Credentials & Configuration

## Rule: Never Hardcode

**Never hardcode IPs, usernames, or tokens** - use config/env/discovery.

### Examples

```python
# ❌ WRONG: Hardcoded values
IP_ADDRESS = "192.168.1.100"
USERNAME = "admin"
PASSWORD = "secret"

# ✅ CORRECT: From configuration
IP_ADDRESS = os.getenv("DEVICE_IP")
USERNAME = os.getenv("HA_USERNAME")
PASSWORD = os.getenv("HA_PASSWORD")

# ✅ CORRECT: From config file
config = load_config()
device_ip = config["device_ip"]
```

## Rule: Use Environment Variables

- Load from environment variables
- Use `.env` files for local development
- Never commit credentials to repository

## Rule: Use Configuration Schema

- Define in `config.yaml`
- Validate on load
- Provide defaults where appropriate

## Files to NEVER Commit

- `hass-credentials.env` - Contains dev credentials
- `.env` files with secrets
- Hardcoded credentials in source code

## Related

See devcontainer setup in `devcontainer-quirks.mdc`.
