---
alwaysApply: true
---
# Rules Index - Fetch on Demand

**CRITICAL: Do NOT paste entire rule files into responses. Use code search to fetch only the relevant sections when needed.**

## Always-Apply (Top Priority)

These files are loaded automatically on every turn:

- **[Executive Rules](_00-exec-rules.mdc)** - 7 critical rules that MUST be followed
- **[Guard](_01-guard.mdc)** - ACK pattern: acknowledge rules before taking action
- **[Tail Recap](zz_end_recap.mdc)** - Final reminder (if applicable)

## Core Development Rules

- **[Development Workflow](development-workflow.mdc)** - 3-step process (edit → rebuild → verify)
- **[Python Changes](python-changes-require-rebuild.mdc)** - Rebuild after `.py` edits
- **[Daily Dev Cheatsheet](daily-dev-cheatsheet.mdc)** - Common commands

## Critical Guardrails

- **[Critical Commands](critical-commands.mdc)** - Command callback patterns
- **[Critical Credentials](critical-credentials.mdc)** - Security rules
- **[Critical Docker](critical-docker.mdc)** - Docker/devcontainer rules
- **[Critical State Management](critical-state-management.mdc)** - State update patterns

## Logging System

- **[Logging Mandatory](logging-mandatory.mdc)** - When and how to log
- **[Logging Patterns](logging-patterns.mdc)** - Configuration patterns
- **[Logging Examples](logging-examples.mdc)** - Code examples

## Setup Requirements

- **[DNS Requirements](dns-requirements.mdc)** - REQUIRED DNS redirection setup
- **[Token Creation Flow](token-creation-flow.mdc)** - Automated LLAT creation

## Helper Tools

- **[Helper Scripts](helper-scripts.mdc)** - Automation scripts
- **[MQTT Entity Cleanup](mqtt-entity-cleanup.mdc)** - Entity deletion workflows
- **[Browser Automation](ai-browser-testing.mdc)** - Playwright patterns

## Specific File Types

- **[Shell Scripting](shell-scripting.mdc)** - Shell script standards
- **[MQTT Integration](mqtt-integration.mdc)** - MQTT discovery patterns

## Reference Documentation

- **[Common Commands](common-commands.mdc)** - Command reference
- **[Performance Tuning](performance-tuning.mdc)** - Optimization patterns
- **[Known Bugs](known-bugs-workarounds.mdc)** - Bug patterns and workarounds
- **[Cloud Relay Patterns](cloud-relay-patterns.mdc)** - Relay mode usage
- **[Documentation Archiving](documentation-archiving.mdc)** - How to document work

## Architecture & Testing

- **[Architecture Concepts](architecture-concepts.mdc)** - Key architectural patterns
- **[Testing Workflows](testing-workflows.mdc)** - Testing procedures
- **[Debugging Guide](debugging-guide.mdc)** - Debug techniques
- **[Debugging with Logs](debugging-with-logs.mdc)** - Log inspection techniques

## Environment Setup

- **[Devcontainer Quirks](devcontainer-quirks.mdc)** - Dev environment setup
- **[MCP Tools Guide](mcp-tools-guide.mdc)** - MCP tools usage
- **[Supervisor API Access](supervisor-api-access.mdc)** - API patterns

## Task Management

- **[Plan & Todo Management](plan-todo-management.mdc)** - Task tracking
- **[Git Practices](git-practices.mdc)** - Git workflow

## Usage Instructions

When you need guidance on a specific topic:
1. **Identify the relevant rule file from the index above**
2. **Use code search to find the specific section you need** (don't paste entire files)
3. **Reference the file path in your response** (e.g., "See `critical-commands.mdc` for pattern details")
4. **Fetch only the section relevant to the current task**

**Anti-Pattern:** Don't copy-paste 500 lines of rules into every response - fetch on demand.
