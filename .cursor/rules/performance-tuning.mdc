---
description: Performance tuning and optimization patterns
---

# Performance Tuning

## Environment Variables

```bash
CYNC_MAX_TCP_CONN=8  # Max TCP devices connected at once (default: 8)
CYNC_CMD_BROADCASTS=3  # Number of command broadcasts (default varies)
CYNC_TCP_WHITELIST='10.0.2.20, 10.0.2.24'  # Limit connections to specific devices
```

**Recommended:**
- **4-6 devices** connected for optimal performance
- Prefer LED strips and bulbs as bridge devices
- Start with 3-5 broadcasts, increase if commands missed

## Device Bridge Quality

Some devices are better at bridging TCP â†” Bluetooth LE:

1. LED strip controllers (best)
2. Bulbs (downlights, wafer, under cabinet)
3. Switches
4. Indoor plugs
5. Thermostats (worst)

## Performance Bottlenecks

### Cascading Refreshes (FIXED)
**Issue:** Auto-refresh after ACK caused cascading refresh storms
**Fix:** Removed automatic refresh - now manual only

### Command Throttling Pattern
```python
if self.pending_command:
    return  # Throttle

self.pending_command = True
# ... send command ...
# After ACK: self.pending_command = False
```

## Related

- See `common-commands.mdc` for command reference
- See `devcontainer-quirks.mdc` for dev environment notes
