---
description: Git and commit guidelines
---

# Git Practices

**Default:** prepare changes only; user owns commits and pushes.

- Lint *before* staging.
- Stage files intentionally (`git add <file>`, `git add -p`) and show `git status` / `git diff`.
- Never run `git commit`, `push`, `reset`, `checkout`, `rebase`, `merge`, or other history-altering commands unless the user explicitly instructs and confirms the message/branch.
- If asked to commit/push, summarize staged files, confirm branch + message, warn before destructive actions (`--force`, `reset --hard`, etc.).
- Keep Conventional Commits format handy for draft messages: `<type>(<scope>): <subject>`.
- Respect `.gitignore`; never stage build artifacts or credentials.

**Key reminder:** stage + suggest; user presses the button.

## Collaboration Policy

- **Ask before design decisions** - Don't make architectural or design choices without consulting the user
- **Stop after completing the task** - Don't keep coding beyond what was requested
- **Clarify before major changes** - Ask questions if requirements are ambiguous
- **Implement changes, don't just suggest** - Unless the user explicitly wants suggestions only
