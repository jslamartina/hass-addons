[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cync_lan-mitm"
version = "0.1.0"
description = "MITM for Cync/C by GE smart devices"
readme = "README.md"
authors = [{name = "jslamartina", email = "jslamartina@gmail.com"}]
license = { text = "MIT" }
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.12"
dependencies = []
[project.optional-dependencies]
dev = [
    "ruff>=0.5",
    "pytest>=8",
    "pytest-cov>=4",
]

[project.scripts]
mitm-proxy = "mitm_with_injection:main"
mitm = "mitm_with_injection:main"  # alias
mitm-send = "send_via_mitm:send_packet_to_device"
mitm-query = "query_mode:query_mode"

[project.urls]
Homepage = "https://github.com/jslamartina/cync-lan"
Repository = "https://github.com/jslamartina/cync-lan"
Issues = "https://github.com/jslamartina/cync-lan/issues"

[tool.setuptools]
# Ship these as single-file modules (no packages here)
py-modules = [
    "mitm_with_injection",
    "packet_parser",
    "checksum",
    "send_via_mitm",
    "query_mode",
    "verify_checksum",
    "test_mode_change",
]

[tool.ruff]
# Enable project-wide linting
target-version = "py312"
line-length = 120
src = ["."]
extend-exclude = ["__pycache__"]
force-exclude = true
respect-gitignore = true

[tool.ruff.lint]
# Select rules to check
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
]
ignore = [
    "E501",  # line too long
    "F405",  # star imports may be undefined
    "F403",  # star import used; unable to detect undefined names
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py files